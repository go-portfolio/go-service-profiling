package handlers

import (
	"fmt"
	"math/rand"
	"net/http"
	"runtime"
	"time"

	"github.com/go-portfolio/go-service-profiling/internal/metrics"  // –º–µ—Ç—Ä–∏–∫–∏ Prometheus
	"github.com/go-portfolio/go-service-profiling/internal/workload" // —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–∏—Ç–∞—Ü–∏–∏ –Ω–∞–≥—Ä—É–∑–∫–∏
)

// IndexHandler ‚Äî –∫–æ—Ä–Ω–µ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞
func IndexHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintln(w, "Go Profiling Service is running üöÄ") // –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç
	metrics.RequestsTotal.Inc()                            // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–∏–π —Å—á—ë—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
}

// WorkHandler ‚Äî –∏–º–∏—Ç–∞—Ü–∏—è CPU-–Ω–∞–≥—Ä—É–∑–∫–∏
func WorkHandler(w http.ResponseWriter, r *http.Request) {
	workload.CPUHeavy(20000, 200) // –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç—è–∂—ë–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è (20000 –∏—Ç–µ—Ä–∞—Ü–∏–π –ø–æ 200 —Ü–∏–∫–ª–æ–≤)
	fmt.Fprintln(w, "done cpu work") // —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
	metrics.RequestsTotal.Inc()      // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
}

// AllocHandler ‚Äî –∏–º–∏—Ç–∞—Ü–∏—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
func AllocHandler(w http.ResponseWriter, r *http.Request) {
	workload.Allocate(1000, 1024*100) // –≤—ã–¥–µ–ª—è–µ–º 1000 –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ 100KB –∫–∞–∂–¥—ã–π
	runtime.GC()                       // –≤—ã–∑—ã–≤–∞–µ–º —Å–±–æ—Ä–∫—É –º—É—Å–æ—Ä–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏
	fmt.Fprintln(w, "allocated memory") // —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –ø–∞–º—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∞
	metrics.RequestsTotal.Inc()         // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
}

// SleepHandler ‚Äî –∏–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏/–æ–∂–∏–¥–∞–Ω–∏—è
func SleepHandler(w http.ResponseWriter, r *http.Request) {
	// —Å–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –æ—Ç 100 –¥–æ 1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
	d := time.Duration(100+rand.Intn(900)) * time.Millisecond
	workload.Sleep(d)                   // "—É—Å—ã–ø–ª—è–µ–º" –≥–æ—Ä—É—Ç–∏–Ω—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
	fmt.Fprintln(w, "slept")            // —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –∑–∞–¥–µ—Ä–∂–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
	metrics.RequestsTotal.Inc()         // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
}
